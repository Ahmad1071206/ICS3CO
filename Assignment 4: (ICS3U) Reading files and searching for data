#Author: Ahmad Nasaj
#Student number : 1071026
#Date : 12/19/2024

#merge(): Combines day, month, and year into a single number (YYYYMMDD) to make sorting easy.
#sort(): Sorts words and their dates together alphabetically by the word.
#Match(): Checks if a word exists and gives its date if found.
#wordByDate(): Finds the word for a given date if it exists.
#loadDatabase(): Reads words and dates from a file, converts them, and sorts them.
#main(): Lets the user search by word or date and shows results or errors.



# Convert date into an integer format YYYYMMDD for sorting
import bisect

def merge(day, month, year):
    month_map = {
        "Jan": "01", "Feb": "02", "Mar": "03", "Apr": "04",
        "May": "05", "Jun": "06", "Jul": "07", "Aug": "08",
        "Sep": "09", "Oct": "10", "Nov": "11", "Dec": "12"
    }
    return int(f"{year}{month_map[month]}{day}")

# Sort words and dates together
def sort(words, dates):
    combined = sorted(zip(words, dates))
    sorted_words, sorted_dates = zip(*combined)
    return list(sorted_words), list(sorted_dates)

# Find date for a given word
def isMatch(word, words, dates):
    index = bisect.bisect_left(words, word)
    if index < len(words) and words[index] == word:
        return dates[index]
    return 0

# Find word for a given date
def wordByDate(date, dates, words):
    if date in dates:
        return words[dates.index(date)]
    return None

# Load database from file
def loadDatabase(filename):
    words, dates = [], []
    with open(filename, "r") as file:
        for line in file:
            month, day, year, word = line.strip().split()
            date = merge(day, month, year)
            dates.append(date)
            words.append(word)
    words, dates = sort(words, dates)
    return words, dates

# Main function to interact with the user
def main():
    print("Welcome to the Wordle Database!")
    words, dates = loadDatabase("wordle.dat")

    while True:
        choice = input("Enter 'w' to search by word, or 'd' to search by date (or 'q' to quit): ").lower()

        if choice == 'q':
            break
        elif choice == 'w':
            search_word = input("What word are you looking for? ").upper()
            date = isMatch(search_word, words, dates)
            if date:
                print(f"The word {search_word} was the solution to the puzzle on {date}.")
            else:
                print(f"{search_word} was not found in the database.")
        elif choice == 'd':
            year = input("Enter the year: ")
            month = input("Enter the month (3-letter abbreviation, e.g., 'Jan'): ")
            day = input("Enter the day: ")

            try:
                date = merge(day.zfill(2), month.capitalize(), year)
                if date < 20210619:
                    print(f"{date} is too early. No Wordles occurred before 20210619.")
                elif date > 20240421:
                    print(f"{date} is too recent. Our records only go as late as 20240421.")
                else:
                    word = wordByDate(date, dates, words)
                    if word:
                        print(f"The word entered on {date} was {word}.")
                    else:
                        print(f"No word found for {date}.")
            except KeyError:
                print("Invalid month entered.")
        else:
            print("Invalid option. Please enter 'w', 'd', or 'q'.")

if __name__ == "__main__":
    main()
