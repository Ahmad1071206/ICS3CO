# Author : Ahmad.Nasaj
# Student Number : 1071026
# Revision date: 31 october 2024
# Program: credit card report
# Description:This program processes credit card data to identify expired or soon-to-expire cards. It reads data from a file, validates and filters it, and generates a report listing the cards that are expired or require immediate renewal. The report is saved to an output file.
# Define a threshold for expiry (cards expiring before January 2025 are considered expired)
# Define input file path (contains card data) and output file path (to save the report)
# Helper function: Converts expiration month and year to a single number (YYYYMM format)
# Read the input file, validate its data, and store it in a list
# Skip the header row in the input file if it exists
# Split each line into fields and ensure it contains the correct number of fields
# Validate the expiry month (must be between 1 and 12)
# Validate the expiry year (must be within a reasonable range)
# Append each valid entry (dictionary) to the list of data
# Handle errors if the file is missing or the data is invalid
# Filter data to keep only expired or soon-to-expire cards
# Sort the filtered data by expiry date (oldest first)
# Open the output file for writing and loop through filtered data to write each entry
# Format the full name, card type, number, expiry date, and status for each entry
# Determine whether a card is expired or needs immediate renewal
# Write the formatted line to the output file
# Print a message confirming the report was successfully generated
# Handle any errors that occur while writing to the output file
# Main function: Coordinate reading data, filtering/sorting, and generating the report
# Ensure the script only runs when executed directly (not imported as a module)
import datetime
import os

# Constants
EXPIRY_THRESHOLD = 202501
INPUT_FILE = os.path.join(os.getcwd(), "data.dat")
OUTPUT_FILE = os.path.join(os.getcwd(), "ExpiredCardsReport.txt")

# Helper function to convert expiration month/year to YYYYMM
def convert_to_yyyymm(month, year):
    return year * 100 + month

# Read the input file and parse data
def read_input_file(file_path):
    data = []
    try:
        with open(file_path, "r") as file:
            lines = file.readlines()
        for i, line in enumerate(lines):
            # Skip the header row
            if i == 0 and "Exp-Mo" in line:
                continue
            fields = line.strip().split(",")
            if len(fields) != 6:
                raise ValueError(f"Invalid line format: {line.strip()}")
            entry = {
                "GivenName": fields[0],
                "Surname": fields[1],
                "CCType": fields[2],
                "CCNumber": fields[3],
                "Exp-Mo": int(fields[4]),
                "Exp-Yr": int(fields[5])
            }
            # Validate month and year
            if not (1 <= entry["Exp-Mo"] <= 12):
                raise ValueError(f"Invalid month in entry: {entry}")
            if entry["Exp-Yr"] < 1900 or entry["Exp-Yr"] > datetime.datetime.now().year + 10:
                raise ValueError(f"Invalid year in entry: {entry}")
            data.append(entry)
    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
        exit(1)
    except ValueError as ve:
        print(f"Error: {ve}")
        exit(1)
    return data

# Filter and sort data by expiry date
def filter_and_sort_data(data):
    filtered_data = [entry for entry in data if convert_to_yyyymm(entry["Exp-Mo"], entry["Exp-Yr"]) <= EXPIRY_THRESHOLD]
    # Sort by expiry date
    filtered_data.sort(key=lambda x: convert_to_yyyymm(x["Exp-Mo"], x["Exp-Yr"]))
    return filtered_data

# Write the output file
def write_output_file(filtered_data, output_file):
    try:
        with open(output_file, "w") as file:
            for entry in filtered_data:
                full_name = f"{entry['GivenName']} {entry['Surname']}"
                card_type = entry["CCType"]
                card_number = f"#{entry['CCNumber']}"
                exp_date = f"{entry['Exp-Yr']}{entry['Exp-Mo']:02d}"
                
                if convert_to_yyyymm(entry["Exp-Mo"], entry["Exp-Yr"]) < EXPIRY_THRESHOLD:
                    status = "EXPIRED"
                else:
                    status = "RENEW IMMEDIATELY"

                file.write(f"{full_name:<20} {card_type:<12} {card_number:<20} {exp_date} {status}\n")
        print(f"Report generated by Ahmad Nasaj: {output_file}")
    except Exception as e:
        print(f"Error writing to file: {e}")
        exit(1)

# Main function
def main():
    # Step 1: Read data from the file
    data = read_input_file(INPUT_FILE)

    # Step 2: Filter and sort data
    filtered_data = filter_and_sort_data(data)

    # Step 3: Write the output file
    write_output_file(filtered_data, OUTPUT_FILE)

if __name__ == "__main__":
    main()
